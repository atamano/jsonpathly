// Generated from ./src/parser/generated/JSONPath.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class JSONPathLexer extends Lexer {
	public static readonly CURRENT_VALUE = 1;
	public static readonly DOTDOT = 2;
	public static readonly ROOT_VALUE = 3;
	public static readonly DOT = 4;
	public static readonly STAR = 5;
	public static readonly AND = 6;
	public static readonly EQ = 7;
	public static readonly GE = 8;
	public static readonly GT = 9;
	public static readonly LE = 10;
	public static readonly LT = 11;
	public static readonly NE = 12;
	public static readonly IN = 13;
	public static readonly NIN = 14;
	public static readonly SUB = 15;
	public static readonly ANY = 16;
	public static readonly NON = 17;
	public static readonly SIZO = 18;
	public static readonly SIZ = 19;
	public static readonly NOT = 20;
	public static readonly OR = 21;
	public static readonly TRUE = 22;
	public static readonly FALSE = 23;
	public static readonly NULL = 24;
	public static readonly BRACE_LEFT = 25;
	public static readonly BRACE_RIGHT = 26;
	public static readonly BRACKET_LEFT = 27;
	public static readonly BRACKET_RIGHT = 28;
	public static readonly COLON = 29;
	public static readonly COMMA = 30;
	public static readonly PAREN_LEFT = 31;
	public static readonly PAREN_RIGHT = 32;
	public static readonly QUESTION = 33;
	public static readonly MINUS_SP = 34;
	public static readonly PLUS = 35;
	public static readonly DIV = 36;
	public static readonly IDENTIFIER = 37;
	public static readonly STRING = 38;
	public static readonly NUMBER = 39;
	public static readonly WS = 40;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"CURRENT_VALUE", "DOTDOT", "ROOT_VALUE", "DOT", "STAR", "AND", "EQ", "GE", 
		"GT", "LE", "LT", "NE", "IN", "NIN", "SUB", "ANY", "NON", "SIZO", "SIZ", 
		"NOT", "OR", "TRUE", "FALSE", "NULL", "BRACE_LEFT", "BRACE_RIGHT", "BRACKET_LEFT", 
		"BRACKET_RIGHT", "COLON", "COMMA", "PAREN_LEFT", "PAREN_RIGHT", "QUESTION", 
		"MINUS_SP", "PLUS", "DIV", "IDENTIFIER", "STRING", "ESC_SINGLE", "ESC_DOUBLE", 
		"UNICODE", "HEX", "SAFECODEPOINT_SINGLE", "SAFECODEPOINT_DOUBLE", "NUMBER", 
		"INT", "EXP", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'@'", "'..'", "'$'", "'.'", "'*'", "'&&'", "'=='", "'>='", 
		"'>'", "'<='", "'<'", "'!='", "' in '", "' nin '", "' subsetof '", "' anyof '", 
		"' noneof '", "' sizeof '", "' size '", "'!'", "'||'", "'true'", "'false'", 
		"'null'", "'{'", "'}'", "'['", "']'", "':'", "','", "'('", "')'", "'?'", 
		"'- '", "'+'", "'/'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "CURRENT_VALUE", "DOTDOT", "ROOT_VALUE", "DOT", "STAR", "AND", 
		"EQ", "GE", "GT", "LE", "LT", "NE", "IN", "NIN", "SUB", "ANY", "NON", 
		"SIZO", "SIZ", "NOT", "OR", "TRUE", "FALSE", "NULL", "BRACE_LEFT", "BRACE_RIGHT", 
		"BRACKET_LEFT", "BRACKET_RIGHT", "COLON", "COMMA", "PAREN_LEFT", "PAREN_RIGHT", 
		"QUESTION", "MINUS_SP", "PLUS", "DIV", "IDENTIFIER", "STRING", "NUMBER", 
		"WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(JSONPathLexer._LITERAL_NAMES, JSONPathLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return JSONPathLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(JSONPathLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "JSONPath.g4"; }

	// @Override
	public get ruleNames(): string[] { return JSONPathLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return JSONPathLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return JSONPathLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return JSONPathLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02*\u013D\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03" +
		"\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03" +
		"\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03" +
		"\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03" +
		"\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03" +
		"\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03" +
		"\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03" +
		"#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x07&\xE9\n&\f&\x0E&\xEC\v&\x03\'" +
		"\x03\'\x03\'\x07\'\xF1\n\'\f\'\x0E\'\xF4\v\'\x03\'\x03\'\x03\'\x03\'\x07" +
		"\'\xFA\n\'\f\'\x0E\'\xFD\v\'\x03\'\x05\'\u0100\n\'\x03(\x03(\x03(\x05" +
		"(\u0105\n(\x03)\x03)\x03)\x05)\u010A\n)\x03*\x03*\x03*\x03*\x03*\x03*" +
		"\x03+\x03+\x03,\x03,\x03-\x03-\x03.\x05.\u0119\n.\x03.\x03.\x03.\x06." +
		"\u011E\n.\r.\x0E.\u011F\x05.\u0122\n.\x03.\x05.\u0125\n.\x03/\x03/\x03" +
		"/\x07/\u012A\n/\f/\x0E/\u012D\v/\x05/\u012F\n/\x030\x030\x050\u0133\n" +
		"0\x030\x030\x031\x061\u0138\n1\r1\x0E1\u0139\x031\x031\x02\x02\x022\x03" +
		"\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
		"\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
		"\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
		"-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F" +
		"=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02\x02Q\x02" +
		"\x02S\x02\x02U\x02\x02W\x02\x02Y\x02\x02[\x02)]\x02\x02_\x02\x02a\x02" +
		"*\x03\x02\x0E\x05\x02C\\aac|\x06\x022;C\\aac|\n\x02))11^^ddhhppttvv\n" +
		"\x02$$11^^ddhhppttvv\x05\x022;CHch\x05\x02\x02!))^^\x05\x02\x02!$$^^\x03" +
		"\x022;\x03\x023;\x04\x02GGgg\x04\x02--//\x05\x02\v\f\x0F\x0F\"\"\x02\u0144" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02[\x03\x02\x02" +
		"\x02\x02a\x03\x02\x02\x02\x03c\x03\x02\x02\x02\x05e\x03\x02\x02\x02\x07" +
		"h\x03\x02\x02\x02\tj\x03\x02\x02\x02\vl\x03\x02\x02\x02\rn\x03\x02\x02" +
		"\x02\x0Fq\x03\x02\x02\x02\x11t\x03\x02\x02\x02\x13w\x03\x02\x02\x02\x15" +
		"y\x03\x02\x02\x02\x17|\x03\x02\x02\x02\x19~\x03\x02\x02\x02\x1B\x81\x03" +
		"\x02\x02\x02\x1D\x86\x03\x02\x02\x02\x1F\x8C\x03\x02\x02\x02!\x97\x03" +
		"\x02\x02\x02#\x9F\x03\x02\x02\x02%\xA8\x03\x02\x02\x02\'\xB1\x03\x02\x02" +
		"\x02)\xB8\x03\x02\x02\x02+\xBA\x03\x02\x02\x02-\xBD\x03\x02\x02\x02/\xC2" +
		"\x03\x02\x02\x021\xC8\x03\x02\x02\x023\xCD\x03\x02\x02\x025\xCF\x03\x02" +
		"\x02\x027\xD1\x03\x02\x02\x029\xD3\x03\x02\x02\x02;\xD5\x03\x02\x02\x02" +
		"=\xD7\x03\x02\x02\x02?\xD9\x03\x02\x02\x02A\xDB\x03\x02\x02\x02C\xDD\x03" +
		"\x02\x02\x02E\xDF\x03\x02\x02\x02G\xE2\x03\x02\x02\x02I\xE4\x03\x02\x02" +
		"\x02K\xE6\x03\x02\x02\x02M\xFF\x03\x02\x02\x02O\u0101\x03\x02\x02\x02" +
		"Q\u0106\x03\x02\x02\x02S\u010B\x03\x02\x02\x02U\u0111\x03\x02\x02\x02" +
		"W\u0113\x03\x02\x02\x02Y\u0115\x03\x02\x02\x02[\u0118\x03\x02\x02\x02" +
		"]\u012E\x03\x02\x02\x02_\u0130\x03\x02\x02\x02a\u0137\x03\x02\x02\x02" +
		"cd\x07B\x02\x02d\x04\x03\x02\x02\x02ef\x070\x02\x02fg\x070\x02\x02g\x06" +
		"\x03\x02\x02\x02hi\x07&\x02\x02i\b\x03\x02\x02\x02jk\x070\x02\x02k\n\x03" +
		"\x02\x02\x02lm\x07,\x02\x02m\f\x03\x02\x02\x02no\x07(\x02\x02op\x07(\x02" +
		"\x02p\x0E\x03\x02\x02\x02qr\x07?\x02\x02rs\x07?\x02\x02s\x10\x03\x02\x02" +
		"\x02tu\x07@\x02\x02uv\x07?\x02\x02v\x12\x03\x02\x02\x02wx\x07@\x02\x02" +
		"x\x14\x03\x02\x02\x02yz\x07>\x02\x02z{\x07?\x02\x02{\x16\x03\x02\x02\x02" +
		"|}\x07>\x02\x02}\x18\x03\x02\x02\x02~\x7F\x07#\x02\x02\x7F\x80\x07?\x02" +
		"\x02\x80\x1A\x03\x02\x02\x02\x81\x82\x07\"\x02\x02\x82\x83\x07k\x02\x02" +
		"\x83\x84\x07p\x02\x02\x84\x85\x07\"\x02\x02\x85\x1C\x03\x02\x02\x02\x86" +
		"\x87\x07\"\x02\x02\x87\x88\x07p\x02\x02\x88\x89\x07k\x02\x02\x89\x8A\x07" +
		"p\x02\x02\x8A\x8B\x07\"\x02\x02\x8B\x1E\x03\x02\x02\x02\x8C\x8D\x07\"" +
		"\x02\x02\x8D\x8E\x07u\x02\x02\x8E\x8F\x07w\x02\x02\x8F\x90\x07d\x02\x02" +
		"\x90\x91\x07u\x02\x02\x91\x92\x07g\x02\x02\x92\x93\x07v\x02\x02\x93\x94" +
		"\x07q\x02\x02\x94\x95\x07h\x02\x02\x95\x96\x07\"\x02\x02\x96 \x03\x02" +
		"\x02\x02\x97\x98\x07\"\x02\x02\x98\x99\x07c\x02\x02\x99\x9A\x07p\x02\x02" +
		"\x9A\x9B\x07{\x02\x02\x9B\x9C\x07q\x02\x02\x9C\x9D\x07h\x02\x02\x9D\x9E" +
		"\x07\"\x02\x02\x9E\"\x03\x02\x02\x02\x9F\xA0\x07\"\x02\x02\xA0\xA1\x07" +
		"p\x02\x02\xA1\xA2\x07q\x02\x02\xA2\xA3\x07p\x02\x02\xA3\xA4\x07g\x02\x02" +
		"\xA4\xA5\x07q\x02\x02\xA5\xA6\x07h\x02\x02\xA6\xA7\x07\"\x02\x02\xA7$" +
		"\x03\x02\x02\x02\xA8\xA9\x07\"\x02\x02\xA9\xAA\x07u\x02\x02\xAA\xAB\x07" +
		"k\x02\x02\xAB\xAC\x07|\x02\x02\xAC\xAD\x07g\x02\x02\xAD\xAE\x07q\x02\x02" +
		"\xAE\xAF\x07h\x02\x02\xAF\xB0\x07\"\x02\x02\xB0&\x03\x02\x02\x02\xB1\xB2" +
		"\x07\"\x02\x02\xB2\xB3\x07u\x02\x02\xB3\xB4\x07k\x02\x02\xB4\xB5\x07|" +
		"\x02\x02\xB5\xB6\x07g\x02\x02\xB6\xB7\x07\"\x02\x02\xB7(\x03\x02\x02\x02" +
		"\xB8\xB9\x07#\x02\x02\xB9*\x03\x02\x02\x02\xBA\xBB\x07~\x02\x02\xBB\xBC" +
		"\x07~\x02\x02\xBC,\x03\x02\x02\x02\xBD\xBE\x07v\x02\x02\xBE\xBF\x07t\x02" +
		"\x02\xBF\xC0\x07w\x02\x02\xC0\xC1\x07g\x02\x02\xC1.\x03\x02\x02\x02\xC2" +
		"\xC3\x07h\x02\x02\xC3\xC4\x07c\x02\x02\xC4\xC5\x07n\x02\x02\xC5\xC6\x07" +
		"u\x02\x02\xC6\xC7\x07g\x02\x02\xC70\x03\x02\x02\x02\xC8\xC9\x07p\x02\x02" +
		"\xC9\xCA\x07w\x02\x02\xCA\xCB\x07n\x02\x02\xCB\xCC\x07n\x02\x02\xCC2\x03" +
		"\x02\x02\x02\xCD\xCE\x07}\x02\x02\xCE4\x03\x02\x02\x02\xCF\xD0\x07\x7F" +
		"\x02\x02\xD06\x03\x02\x02\x02\xD1\xD2\x07]\x02\x02\xD28\x03\x02\x02\x02" +
		"\xD3\xD4\x07_\x02\x02\xD4:\x03\x02\x02\x02\xD5\xD6\x07<\x02\x02\xD6<\x03" +
		"\x02\x02\x02\xD7\xD8\x07.\x02\x02\xD8>\x03\x02\x02\x02\xD9\xDA\x07*\x02" +
		"\x02\xDA@\x03\x02\x02\x02\xDB\xDC\x07+\x02\x02\xDCB\x03\x02\x02\x02\xDD" +
		"\xDE\x07A\x02\x02\xDED\x03\x02\x02\x02\xDF\xE0\x07/\x02\x02\xE0\xE1\x07" +
		"\"\x02\x02\xE1F\x03\x02\x02\x02\xE2\xE3\x07-\x02\x02\xE3H\x03\x02\x02" +
		"\x02\xE4\xE5\x071\x02\x02\xE5J\x03\x02\x02\x02\xE6\xEA\t\x02\x02\x02\xE7" +
		"\xE9\t\x03\x02\x02\xE8\xE7\x03\x02\x02\x02\xE9\xEC\x03\x02\x02\x02\xEA" +
		"\xE8\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEBL\x03\x02\x02\x02\xEC" +
		"\xEA\x03\x02\x02\x02\xED\xF2\x07$\x02\x02\xEE\xF1\x05Q)\x02\xEF\xF1\x05" +
		"Y-\x02\xF0\xEE\x03\x02\x02\x02\xF0\xEF\x03\x02\x02\x02\xF1\xF4\x03\x02" +
		"\x02\x02\xF2\xF0\x03\x02\x02\x02\xF2\xF3\x03\x02\x02\x02\xF3\xF5\x03\x02" +
		"\x02\x02\xF4\xF2\x03\x02\x02\x02\xF5\u0100\x07$\x02\x02\xF6\xFB\x07)\x02" +
		"\x02\xF7\xFA\x05O(\x02\xF8\xFA\x05W,\x02\xF9\xF7\x03\x02\x02\x02\xF9\xF8" +
		"\x03\x02\x02\x02\xFA\xFD\x03\x02\x02\x02\xFB\xF9\x03\x02\x02\x02\xFB\xFC" +
		"\x03\x02\x02\x02\xFC\xFE\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFE\u0100" +
		"\x07)\x02\x02\xFF\xED\x03\x02\x02\x02\xFF\xF6\x03\x02\x02\x02\u0100N\x03" +
		"\x02\x02\x02\u0101\u0104\x07^\x02\x02\u0102\u0105\t\x04\x02\x02\u0103" +
		"\u0105\x05S*\x02\u0104\u0102\x03\x02\x02\x02\u0104\u0103\x03\x02\x02\x02" +
		"\u0105P\x03\x02\x02\x02\u0106\u0109\x07^\x02\x02\u0107\u010A\t\x05\x02" +
		"\x02\u0108\u010A\x05S*\x02\u0109\u0107\x03\x02\x02\x02\u0109\u0108\x03" +
		"\x02\x02\x02\u010AR\x03\x02\x02\x02\u010B\u010C\x07w\x02\x02\u010C\u010D" +
		"\x05U+\x02\u010D\u010E\x05U+\x02\u010E\u010F\x05U+\x02\u010F\u0110\x05" +
		"U+\x02\u0110T\x03\x02\x02\x02\u0111\u0112\t\x06\x02\x02\u0112V\x03\x02" +
		"\x02\x02\u0113\u0114\n\x07\x02\x02\u0114X\x03\x02\x02\x02\u0115\u0116" +
		"\n\b\x02\x02\u0116Z\x03\x02\x02\x02\u0117\u0119\x07/\x02\x02\u0118\u0117" +
		"\x03\x02\x02\x02\u0118\u0119\x03\x02\x02\x02\u0119\u011A\x03\x02\x02\x02" +
		"\u011A\u0121\x05]/\x02\u011B\u011D\x070\x02\x02\u011C\u011E\t\t\x02\x02" +
		"\u011D\u011C\x03\x02\x02\x02\u011E\u011F\x03\x02\x02\x02\u011F\u011D\x03" +
		"\x02\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120\u0122\x03\x02\x02\x02\u0121" +
		"\u011B\x03\x02\x02\x02\u0121\u0122\x03\x02\x02\x02\u0122\u0124\x03\x02" +
		"\x02\x02\u0123\u0125\x05_0\x02\u0124\u0123\x03\x02\x02\x02\u0124\u0125" +
		"\x03\x02\x02\x02\u0125\\\x03\x02\x02\x02\u0126\u012F\x072\x02\x02\u0127" +
		"\u012B\t\n\x02\x02\u0128\u012A\t\t\x02\x02\u0129\u0128\x03\x02\x02\x02" +
		"\u012A\u012D\x03\x02\x02\x02\u012B\u0129\x03\x02\x02\x02\u012B\u012C\x03" +
		"\x02\x02\x02\u012C\u012F\x03\x02\x02\x02\u012D\u012B\x03\x02\x02\x02\u012E" +
		"\u0126\x03\x02\x02\x02\u012E\u0127\x03\x02\x02\x02\u012F^\x03\x02\x02" +
		"\x02\u0130\u0132\t\v\x02\x02\u0131\u0133\t\f\x02\x02\u0132\u0131\x03\x02" +
		"\x02\x02\u0132\u0133\x03\x02\x02\x02\u0133\u0134\x03\x02\x02\x02\u0134" +
		"\u0135\x05]/\x02\u0135`\x03\x02\x02\x02\u0136\u0138\t\r\x02\x02\u0137" +
		"\u0136\x03\x02\x02\x02\u0138\u0139\x03\x02\x02\x02\u0139\u0137\x03\x02" +
		"\x02\x02\u0139\u013A\x03\x02\x02\x02\u013A\u013B\x03\x02\x02\x02\u013B" +
		"\u013C\b1\x02\x02\u013Cb\x03\x02\x02\x02\x13\x02\xEA\xF0\xF2\xF9\xFB\xFF" +
		"\u0104\u0109\u0118\u011F\u0121\u0124\u012B\u012E\u0132\u0139\x03\b\x02" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!JSONPathLexer.__ATN) {
			JSONPathLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(JSONPathLexer._serializedATN));
		}

		return JSONPathLexer.__ATN;
	}

}

